using System;
using System.Collections.Generic;
using System.Text;  
using System.Linq;
using System.Threading.Tasks.Dataflow;
using MongoDB.Bson;
using nvoid.extensions;
using Netlyt.Service;
using Netlyt.Service.Integration; 
using Netlyt.Service.Time;

namespace $Namespace
{
    public class FeatureGenerator : DonutFeatureEmitter<$DonutType, $DonutContextType>
    {
		public FeatureGenerator($DonutType donut) : base(donut)
		{
			
		}

		public TransformBlock<IntegratedDocument, IEnumerable<KeyValuePair<string, object>>> GetBlock()
        {
            var block = new TransformBlock<IntegratedDocument, IEnumerable<KeyValuePair<string, object>>>((doc) =>
            {
                return GetFeatures(doc);
            });
            return block;
        }

		public override IEnumerable<KeyValuePair<string, object>> GetFeatures(IntegratedDocument intDoc)
		{
			BsonDocument intDocDocument = intDoc.GetDocument();
            var doc = intDocDocument;

			$FeatureYields

			yield break;
		}
    }
}
